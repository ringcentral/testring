name: Create Canary Release
on:
  issue_comment:
    types: [ created ]

permissions:
  contents: read # for checkout
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  canary-release:
    name: canary-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    if: |
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'CONTRIBUTOR') &&
      startsWith(github.event.comment.body, '/canary-release')
    steps:
      - name: get pr information
        uses: actions/github-script@v4
        id: pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              core.info(`Got PR: ${JSON.stringify(result.data)}`)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ fromJSON(steps.pr.outputs.result).head.ref }}
          repository: ${{ fromJSON(steps.pr.outputs.result).head.repo.full_name }}
      - name: Git Identity
        run: |
          git config --global user.name '${GITHUB_ACTOR}'
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
      # https://docs.github.com/en/actions/guides/publishing-nodejs-packages
      # Note: If you need to publish to registries that have different scope prefixes, you'll need to modify the package.json file on the runner to change the scope prefix. For example, if you publish a package to the @mona scope for npm and @octocat scope for GitHub Packages, you can replace the @mona scope with @octocat in the package.json file on the runner after publishing to npm and before publishing to GitHub Packages.
      - name: Prepare Publish Packages to npmjs(testring-dev)
        run: |
          grep "@testring" -rl . | xargs sed -i "s/\@testring/\@testring-dev/g"
          grep "'testring'" -rl . | xargs sed -i "s/'testring'/'testring-dev'/g"
          sed -i "s/\"name\": \"testring\"/\"name\": \"testring-dev\"/g" ./core/testring/package.json
          sed -i "s/\"testring\"/\"testring-dev\"/g" ./packages/e2e-test-app/package.json
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: npm run test:ci
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Send coverage report to Coveralls
      #- name: Coveralls
      #  uses: coverallsapp/github-action@master
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish
        run: yarn run release:canary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_DEV }}
      - uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸŽ‰ Canary Release. You can install canary version via `npm install package@beta`'
            })
